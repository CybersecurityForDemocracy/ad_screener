{"version":3,"sources":["AdUnit.js","TimePeriodPicker.js","FilterSelector.js","App.js","serviceWorker.js","index.js"],"names":["filterfn","key","val","obj","AdFeedbackButton","params","useState","user_feedback_label_name","buttonTitle","setButtonTitle","handleSelect","label","axios","post","sendAdFeedbackURL","ad_cluster_id","then","response","console","log","data","catch","error","status","handleShowNeedLoginModal","finally","DropdownButton","className","id","title","map","Dropdown","Item","href","eventKey","onSelect","AdDetails","details","length","female_data","demo_impression_results","filter","sort","a","b","age_group","male_data","unknown_data","ad_url","canonical_archive_id","region_data","region_impression_results","region","Modal","show","onHide","handleClose","dialogClassName","size","Header","Title","Body","Tabs","defaultActiveKey","Tab","mountOnEnter","Table","striped","bordered","hover","demo_result","max_spend","max_impressions","region_result","alternative_ads","ad_id","alt","src","type","entities","topics","cluster_size","advertiser_info","advertiser_type","advertiser_party","advertiser_fec_id","advertiser_webiste","advertiser_risk_score","Footer","Button","target","rel","variant","onClick","AdUnit","setShow","ad_details","setAdDetails","ad","url","adImageSrc","setAdImageSrc","getAdDetails","get","getAdDetailsURL","start_date","end_date","total_spend","total_impressions","num_pages","onError","TimePeriodPicker","useQueryParam","StringParam","setStartingDate","setEndingDate","startDate","endDate","selected","onChange","date","setStartDate","toString","setEndDate","FilterSelector","setParam","option","value","selectedOption","setState","options","isSearchable","isMulti","isDisabled","disabled","name","getSelectorValue","array","param","undefined","findIndex","element","PageNavigation","showNext","showPrevious","onClickPrevious","onClickNext","AdClustersDisplay","isGetAdsRequestPending","isAdDataEmpty","ads","resultsOffset","getPreviousPageOfAds","getNextPageOfAds","align","color","current","AdScreener","startDateParam","endDateParam","topicParam","regionParam","genderParam","ageRangeParam","riskScoreParam","orderByParam","orderDirectionParam","addDays","Date","topic","setTopic","regions","setRegion","genders","gender","setGender","ageRanges","ageRange","setAgeRange","riskScores","riskScore","setRiskScore","orderByOptions","orderBy","setOrderBy","orderDirections","orderDirection","setOrderDirection","useRef","showModal","setShowModal","showNeedLoginModal","setShowNeedLoginModal","setIsGetAdsRequestPending","setIsAdDataEmpty","setAds","getAds","numResults","offset","i","App","isFilterSelectorDataLoaded","setIsFilterSelectorDataLoaded","filterSelectorData","setFilterSelectorData","useEffect","Boolean","window","location","hostname","match","ReactDOM","render","ReactRouterRoute","Route","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b0c95352.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Modal from \"react-bootstrap/Modal\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Table from \"react-bootstrap/Table\";\nimport Tabs from \"react-bootstrap/Tabs\";\n\nimport \"./AdUnit.css\";\n\nconst getAdDetailsURL = \"/getaddetails\";\nconst sendAdFeedbackURL = \"/ad-feedback\";\nconst errorImageSrc = 'https://storage.googleapis.com/facebook_ad_archive_screenshots/error.png';\n\nconst AdUnit = (params) => {\n  const [show, setShow] = useState(false);\n  const [ad_details, setAdDetails] = useState([]);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [adImageSrc, setAdImageSrc] = useState(params.ad.url);\n  const handleAdImageError = () => setAdImageSrc(errorImageSrc);\n\n  const getAdDetails = (ad_cluster_id) => {\n    axios\n      .get(getAdDetailsURL + '/' + ad_cluster_id)\n      .then((response) => {\n        console.log(response.data);\n        setAdDetails(response.data);\n        handleShow();\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {});\n  }\n\n\n  return (\n    <div className=\"ad-container\">\n      <div className=\"ad-summary\">\n        <div className=\"ad-summary-block-1\">\n          <div className=\"ad-summary-tuple\">\n            <div className=\"ad-summary-field\">First seen:</div>\n            <div className=\"ad-summary-field\">Last seen:</div>\n            <div className=\"ad-summary-field\">Cluster Size:</div>\n          </div>\n          <div className=\"ad-summary-tuple\">\n            <div className=\"ad-summary-data\">{params.ad.start_date}</div>\n            <div className=\"ad-summary-data\">{params.ad.end_date}</div>\n            <div className=\"ad-summary-data\">{params.ad.cluster_size}</div>\n          </div>\n        </div>\n        <div className=\"ad-summary-block-2\">\n          <div className=\"ad-summary-spend\">\n            <div className=\"ad-summary-field\">Estimated Total Spend:</div>\n            <div className=\"ad-summary-field\">Estimated Total Impressions:</div>\n            <div className=\"ad-summary-field\">Number of pages:</div>\n          </div>\n          <div className=\"ad-summary-spend\">\n            <div className=\"ad-summary-data\">{params.ad.total_spend}</div>\n            <div className=\"ad-summary-data\">{params.ad.total_impressions}</div>\n            <div className=\"ad-summary-data\">{params.ad.num_pages}</div>\n          </div>\n        </div>\n      </div>\n      <Button variant=\"primary\" onClick={() => getAdDetails(params.ad.ad_cluster_id)}>\n        Ad Details\n      </Button>\n      <AdFeedbackButton\n        ad_cluster_id={params.ad.ad_cluster_id}\n        handleShowNeedLoginModal={params.handleShowNeedLoginModal}\n        user_feedback_label_name={params.ad.user_feedback_label_name}\n      />\n      <AdDetails\n        show={show}\n        handleClose={handleClose}\n        details={ad_details}\n        key={ad_details.ad_cluster_id}\n      />\n      <div className=\"ad-image-container\">\n        <img className=\"ad-image\" alt={adImageSrc} src={adImageSrc} onError={handleAdImageError}/>\n      </div>\n    </div>\n  );\n};\n\nconst filterfn = (key, val) => {\n  return (obj) => obj[key] === val;\n};\n\nconst AdFeedbackButton = (params) => {\n  const [buttonTitle, setButtonTitle] = useState(params.user_feedback_label_name === null ? \"Is this ad problematic?\" : params.user_feedback_label_name);\n  const handleSelect = (label) => {\n    axios.post(sendAdFeedbackURL + \"/\" + params.ad_cluster_id + \"/set-label/\" + label)\n      .then((response) => {\n        console.log(response.data);\n        setButtonTitle(label);\n      })\n      .catch((error) => {\n        console.log(error);\n        if (error.response && error.response.status === 401) {\n          params.handleShowNeedLoginModal();\n        }\n      })\n      .finally(() => {});\n  };\n  const labels = ['(No Answer)', 'No', 'Misinformation', 'Scam', 'Other', 'Miscategorized'];\n  return (\n    <DropdownButton className=\"problematic-ad-button\" id=\"dropdown-basic-button\" title={buttonTitle}>\n      {labels.map(\n        (label) => (\n          <Dropdown.Item href=\"#\" key={params.ad_cluster_id + label} eventKey={label} onSelect={handleSelect}>{label}</Dropdown.Item>\n        ),\n      )}\n    </DropdownButton>\n  );\n}\n\nconst AdDetails = (params) => {\n  if (!(params.details && params.details.length !== 0)) {\n    return(<div></div>);\n  }\n\n  var female_data = params.details.demo_impression_results.filter(\n    filterfn(\"gender\", \"female\")\n  );\n  female_data.sort((a, b) => (a.age_group > b.age_group ? 1 : -1));\n  var male_data = params.details.demo_impression_results.filter(\n    filterfn(\"gender\", \"male\")\n  );\n  male_data.sort((a, b) => (a.age_group > b.age_group ? 1 : -1));\n  var unknown_data = params.details.demo_impression_results.filter(\n    filterfn(\"gender\", \"unknown\")\n  );\n  unknown_data.sort((a, b) => (a.age_group > b.age_group ? 1 : -1));\n  var ad_url =\n    \"https://www.facebook.com/ads/library/?id=\" + params.details.canonical_archive_id;\n  var region_data = params.details.region_impression_results;\n  region_data.sort((a, b) => (a.region > b.region ? 1 : -1));\n  return (\n    <Modal\n      show={params.show}\n      onHide={params.handleClose}\n      dialogClassName=\"modal-90w\"\n      size=\"xl\"\n    >\n      <Modal.Header>\n        <Modal.Title>Cluster ID: {params.details.ad_cluster_id}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Tabs defaultActiveKey=\"demos\">\n          <Tab\n            eventKey=\"demos\"\n            title=\"Total Demographic Spend\"\n            mountOnEnter={true}\n          >\n            <h3>Female</h3>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Age Group</th>\n                  <th>Max Spend</th>\n                  <th>Max Impressions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {female_data.map((demo_result) => (\n                  <tr key={demo_result.age_group}>\n                    <td>{demo_result.age_group}</td>\n                    <td>{demo_result.max_spend}</td>\n                    <td>{demo_result.max_impressions}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            <h3>Male</h3>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Age Group</th>\n                  <th>Max Spend</th>\n                  <th>Max Impressions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {male_data.map((demo_result) => (\n                  <tr key={demo_result.age_group}>\n                    <td>{demo_result.age_group}</td>\n                    <td>{demo_result.max_spend}</td>\n                    <td>{demo_result.max_impressions}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            <h3>Unknown</h3>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Age Group</th>\n                  <th>Max Spend</th>\n                  <th>Max Impressions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {unknown_data.map((demo_result) => (\n                  <tr key={demo_result.age_group}>\n                    <td>{demo_result.age_group}</td>\n                    <td>{demo_result.max_spend}</td>\n                    <td>{demo_result.max_impressions}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Tab>\n          <Tab\n            eventKey=\"regional\"\n            title=\"Total Regional Spend\"\n            mountOnEnter={true}\n          >\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Region</th>\n                  <th>Max Spend</th>\n                  <th>Max Impressions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {region_data.map((region_result) => (\n                  <tr key={region_result.region}>\n                    <td>{region_result.region}</td>\n                    <td>{region_result.max_spend}</td>\n                    <td>{region_result.max_impressions}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Tab>\n          <Tab\n            eventKey=\"alternates\"\n            title=\"Alternate Creatives\"\n            mountOnEnter={true}\n          >\n            {params.details.alternative_ads.map((ad_id) => {\n              return (\n                <div className=\"ad-image-container\" key={ad_id}>\n                  <img alt={ad_id} src={\"https://storage.googleapis.com/facebook_ad_archive_screenshots/\" + ad_id + \".png\"} />\n                </div>\n              );\n            })}\n          </Tab>\n          <Tab eventKey=\"metadata\" title=\"NYU Metadata\" mountOnEnter={true}>\n            <Table striped bordered hover>\n              <tbody>\n                <tr><td>Ad Type:</td><td>{params.details.type}</td></tr>\n                <tr><td>Entities:</td><td>{params.details.entities}</td></tr>\n                <tr><td>Cluster Topics:</td><td>{params.details.topics}</td></tr>\n                <tr><td>Number of ads in cluster:</td><td>{params.details.cluster_size}</td></tr>\n                <tr><td>Canonical ad archive ID:</td><td>{params.details.canonical_archive_id}</td></tr>\n              </tbody>\n            </Table>\n          </Tab>\n          <Tab\n            eventKey=\"advertiser_info\"\n            title=\"Advertiser Metadata\"\n            mountOnEnter={true}\n          >\n            <Table striped bordered hover>\n              <tbody>\n                <tr>\n                <td>Advertiser Type:</td><td>{params.details.advertiser_info.advertiser_type}</td></tr>\n                <tr><td>Advertiser Party:</td><td>{params.details.advertiser_info.advertiser_party}</td></tr>\n                <tr><td>FEC ID:</td><td>{params.details.advertiser_info.advertiser_fec_id}</td></tr>\n                <tr><td>Advertiser website:</td><td>{params.details.advertiser_info.advertiser_webiste}</td></tr>\n                <tr><td>Risk Score:</td><td>{params.details.advertiser_info.advertiser_risk_score}</td></tr>\n              </tbody>\n            </Table>\n          </Tab>\n        </Tabs>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          className=\"right\"\n          href={ad_url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          See in Facebook Ad Library\n        </Button>{\" \"}\n        <Button variant=\"secondary\" onClick={params.handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default AdUnit;\n","import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useQueryParam, StringParam } from 'use-query-params';\n\nconst TimePeriodPicker = (params) => {\n  const [startingDate, setStartingDate] = useQueryParam('Start Date', StringParam);\n  const [endingDate, setEndingDate] = useQueryParam('End Date', StringParam);\n  const updateStartTime = (date) => {\n    params.setStartDate(date);\n    setStartingDate(date.toString());\n  };\n  const updateEndTime = (date) => {\n    params.setEndDate(date);\n    setEndingDate(date.toString());\n  };\n  console.log(params.startDate);\n  console.log(params.endDate);\n\n  return (\n    <div>\n      <div>\n        Start Date:{\" \"}\n        <DatePicker selected={params.startDate} onChange={updateStartTime} />\n      </div>\n      <div>\n        End Date:{\" \"}\n        <DatePicker selected={params.endDate} onChange={updateEndTime} />\n      </div>\n    </div>\n  );\n};\n\nexport default TimePeriodPicker;\n","import React from 'react';\nimport Select from 'react-select';\nimport { useQueryParam, StringParam } from 'use-query-params';\n\nconst FilterSelector = params => {\n  const [param, setParam] = useQueryParam(params.title, StringParam);\n\n  const handleChange = selectedOption => {\n    params.setState({ selectedOption });\n    setParam(selectedOption.value);\n    console.log(`Option selected:`, selectedOption);\n  };\n  console.log(params.option)\n  return (\n    <div className=\"filter-selector\">\n      {params.title}\n      <Select\n        value={params.option.selectedOption}\n        onChange={handleChange}\n        options={params.options}\n        isSearchable={true}\n        isMulti={false}\n        isDisabled={params.disabled}\n        name={params.title}\n      />\n    </div>\n  );\n}\n\nexport default FilterSelector","import React, { useState, useEffect, useRef } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport axios from \"axios\";\nimport { addDays } from \"date-fns\";\nimport { useQueryParam, StringParam, NumberParam } from 'use-query-params';\nimport { Link } from 'react-router-dom';\nimport ReactLoading from 'react-loading';\n\nimport \"./App.css\";\nimport AdUnit from \"./AdUnit.js\";\nimport TimePeriodPicker from \"./TimePeriodPicker.js\";\nimport FilterSelector from \"./FilterSelector.js\";\n\nconst getAdsURL = \"/getads\";\nconst getFilterSelectorDataURL = \"/filter-options\";\n\nconst disableOptions = false;\n\nfunction getSelectorValue(array,param){\n\treturn (param==undefined) ? array[0] : array[array.findIndex(element => element.value === param)]\n}\n\nfunction App() {\n  const [isFilterSelectorDataLoaded, setIsFilterSelectorDataLoaded] = useState(false);\n  const [filterSelectorData, setFilterSelectorData] = useState({});\n  const getFilterSelectorData = () => {\n      axios\n        .get(getFilterSelectorDataURL)\n        .then((response) => {\n          console.log(response.data);\n          setFilterSelectorData(response.data);\n          setIsFilterSelectorDataLoaded(true);\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        .finally(() => {});\n  };\n\n  useEffect(() => {\n    getFilterSelectorData();\n  }, []);\n\n  if (!isFilterSelectorDataLoaded) {\n    return (<h1>Loading...</h1>);\n  }\n\n  const topics = filterSelectorData.topics;\n  const regions = filterSelectorData.regions;\n  const genders = filterSelectorData.genders;\n  const ageRanges = filterSelectorData.ageRanges;\n  const riskScores = filterSelectorData.riskScores;\n  const orderByOptions = filterSelectorData.orderByOptions;\n  const orderDirections = filterSelectorData.orderDirections;\n\n  return (\n    <AdScreener\n      topics={topics}\n      regions={regions}\n      genders={genders}\n      ageRanges={ageRanges}\n      riskScores={riskScores}\n      orderByOptions={orderByOptions}\n      orderDirections={orderDirections}\n    />\n  );\n};\n\nconst PageNavigation = (params) => {\n  const showNext = params.showNext > 0;\n  const showPrevious = showNext && params.showPrevious;\n  if (!showNext) {\n    return null;\n  }\n  if (showPrevious) {\n    return (\n      <div><Button onClick={params.onClickPrevious}>Previous</Button>\n      <Button onClick={params.onClickNext}>Next</Button></div>\n    );\n  } else {\n    return (\n      <div><Button onClick={params.onClickNext}>Next</Button></div>\n    );\n  }\n};\n\nconst AdClustersDisplay = (params) => {\n  const isGetAdsRequestPending = params.isGetAdsRequestPending;\n  const isAdDataEmpty = params.isAdDataEmpty;\n  const ads = params.ads;\n  const handleShowNeedLoginModal = params.handleShowNeedLoginModal;\n  const resultsOffset = params.resultsOffset;\n  const getPreviousPageOfAds = params.getPreviousPageOfAds;\n  const getNextPageOfAds = params.getNextPageOfAds;\n\n  if(isGetAdsRequestPending) {\n    return (\n      <div align=\"center\"><br /><br /><ReactLoading type=\"spin\" color=\"#000\"/></div>\n    );\n  }\n  \n  if(isAdDataEmpty) {\n    return (\n      <div><br /><br /><p>No results found</p></div>\n    );\n  }\n    \n  return (\n    <div>\n      <div className=\"App-ad-pane\">\n        {ads.map((ad) => (\n          <AdUnit ad={ad} key={ad.ad_cluster_id} handleShowNeedLoginModal={handleShowNeedLoginModal}/>\n        ))}\n      </div>\n      <PageNavigation\n        showNext={ads.length > 0}\n        showPrevious={resultsOffset.current > 0}\n        onClickPrevious={getPreviousPageOfAds}\n        onClickNext={getNextPageOfAds}\n      />\n    </div>\n  );\n}\n\nconst AdScreener = (params) => {\n\n  const [startDateParam, setStartDateParam] = useQueryParam('Start Date', StringParam);\n  const [endDateParam, setEndDateParam] = useQueryParam('End Date', StringParam);\n  const [topicParam, setTopicParam] = useQueryParam('Topic', StringParam);\n  const [regionParam, setRegionParam] = useQueryParam('Region', StringParam);\n  const [genderParam, setGenderParam] = useQueryParam('Gender', StringParam);\n  const [ageRangeParam, setAgeRangeParam] = useQueryParam('Age Range', StringParam);\n  const [riskScoreParam, setRiskScoreParam] = useQueryParam('Risk Score', StringParam);\n  const [orderByParam, setOrderByParam] = useQueryParam('Sort By Field', StringParam);\n  const [orderDirectionParam, setOrderDirectionParam] = useQueryParam('Sort Order', StringParam);\n\n  const [startDate, setStartDate] = useState((startDateParam===undefined) ? addDays(new Date(), -7) : new Date(startDateParam));\n  const [endDate, setEndDate] = useState((endDateParam===undefined) ? new Date() : new Date(endDateParam));\n  const [topic, setTopic] = useState({ selectedOption: getSelectorValue(params.topics,topicParam)});\n  const [region, setRegion] = useState({ selectedOption: getSelectorValue(params.regions,regionParam)});\n  const [gender, setGender] = useState({ selectedOption: getSelectorValue(params.genders,genderParam)});\n  const [ageRange, setAgeRange] = useState({ selectedOption: getSelectorValue(params.ageRanges,ageRangeParam)});\n  const [riskScore, setRiskScore] = useState({ selectedOption: getSelectorValue(params.riskScores,riskScoreParam)});\n  const [orderBy, setOrderBy] = useState({ selectedOption: getSelectorValue(params.orderByOptions,orderByParam)});\n  const [orderDirection, setOrderDirection] = useState({ selectedOption: getSelectorValue(params.orderDirections,orderDirectionParam)});\n  \n  const numResultsToRequest = 20;\n  const resultsOffset = useRef(0);\n  const resetOffset = () => { resultsOffset.current = 0 };\n  const incermentOffset = (i) => { resultsOffset.current = resultsOffset.current + i };\n  const decermentOffset = (i) => { if (resultsOffset.current >= i) {resultsOffset.current = resultsOffset.current - i }};\n  const [showModal, setShowModal] = useState(false);\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n  const [showNeedLoginModal, setShowNeedLoginModal] = useState(false);\n  const handleShowNeedLoginModal = () => setShowNeedLoginModal(true);\n  const handleCloseNeedLoginModal = () => setShowNeedLoginModal(false);\n  const [isGetAdsRequestPending, setIsGetAdsRequestPending] = useState(false);\n  const [isAdDataEmpty, setIsAdDataEmpty] = useState(false);\n  const [ads, setAds] = useState([\n    // {  // This is  dummy ad, helpful for testing without loading images\n    //   funding_entity: \"Funding Entity\",\n    //   spend: \"0-99 USD\",\n    //   url: \"\",\n    //   impressions: \"1000-5000\",\n    //   archive_id: \"Invalid archive_id\",\n    //   demo_impression_results: [],\n    //   region_impression_results: [],\n    //   alternative_archive_ids: []\n    // }\n  ]);\n\n  const getAds = () => {\n    setIsGetAdsRequestPending(true);\n    setIsAdDataEmpty(true);\n    axios\n      .get(getAdsURL, {\n        params: {\n          startDate: startDate,\n          endDate: endDate,\n          topic: topic.selectedOption.value,\n          // Using label for region is intentional. The db stores full strings, not 2 char codes\n          region: region.selectedOption.label,\n          gender: gender.selectedOption.value,\n          ageRange: ageRange.selectedOption.value,\n          riskScore: riskScore.selectedOption.value,\n          orderBy: orderBy.selectedOption.value,\n          orderDirection: orderDirection.selectedOption.value,\n          numResults: numResultsToRequest,\n          offset: resultsOffset.current\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setAds(response.data);\n        setIsAdDataEmpty(response.data.length === 0);\n        setIsGetAdsRequestPending(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        if (error.response && error.response.status === 401) {\n          handleShowNeedLoginModal();\n        }\n      })\n      .finally(() => {});\n  };\n\n  const getPreviousPageOfAds = () => {\n    decermentOffset(numResultsToRequest);\n    getAds();\n  };\n  \n  const getNextPageOfAds = () => {\n    incermentOffset(numResultsToRequest);\n    getAds();\n  };\n\n  const getFirstPageOfAds = () => {\n    resetOffset();\n    getAds();\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Welcome to NYU's Ad Screening System</h1>\n      </header>\n      <p>\n        Please select filters below and click 'Get Ads' to load content.{\" \"}\n        {/* eslint-disable-next-line */}\n        <a href=\"#\" onClick={handleShow}>\n          Click here for more information.\n        </a>\n      </p>\n\n      <div className=\"App-filter-selector\">\n        <FilterSelector\n          setState={setTopic}\n          option={topic}\n          title=\"Topic\"\n          options={params.topics}\n        />\n        <FilterSelector\n          setState={setRegion}\n          option={region}\n          title=\"Region\"\n          options={params.regions}\n          disabled={disableOptions}\n        />\n        <FilterSelector\n          setState={setGender}\n          option={gender}\n          title=\"Gender\"\n          options={params.genders}\n          disabled={disableOptions}\n        />\n        <FilterSelector\n          setState={setAgeRange}\n          option={ageRange}\n          title=\"Age Range\"\n          options={params.ageRanges}\n          disabled={disableOptions}\n        />\n        <FilterSelector\n          setState={setRiskScore}\n          option={riskScore}\n          title=\"Risk Score\"\n          options={params.riskScores}\n          disabled={disableOptions}\n        />\n        <FilterSelector\n          setState={setOrderBy}\n          option={orderBy}\n          title=\"Sort By Field\"\n          options={params.orderByOptions}\n          disabled={disableOptions}\n        />\n        <FilterSelector\n          setState={setOrderDirection}\n          option={orderDirection}\n          title=\"Sort Order\"\n          options={params.orderDirections}\n          disabled={disableOptions}\n        />\n        <TimePeriodPicker\n          startDate={startDate}\n          setStartDate={setStartDate}\n          endDate={endDate}\n          setEndDate={setEndDate}\n        />\n        <Button variant=\"primary\" onClick={getFirstPageOfAds}>Get Ads</Button>\n      </div>\n\n      <AdClustersDisplay\n        isGetAdsRequestPending={isGetAdsRequestPending}\n        isAdDataEmpty={isAdDataEmpty}\n        ads={ads}\n        handleShowNeedLoginModal={handleShowNeedLoginModal}\n        resultsOffset={resultsOffset}\n        getPreviousPageOfAds={getPreviousPageOfAds}\n        getNextPageOfAds={getNextPageOfAds}\n      />\n\n      <Modal\n        show={showModal}\n        onHide={handleClose}\n        dialogClassName=\"modal-90w\"\n        size=\"lg\"\n      >\n        <Modal.Header>\n          <Modal.Title>How To Use This Tool</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h2>Filtering Ads</h2>\n          <p>To view ads, select a topic, and a region and/or demographic group of interest. Select a date range, and click 'Get Ads'. If you are interested in a topic that is not available, please contact us so it can be added.</p>\n          <h2>Viewing Results</h2>\n          <p>To see in-depth data about each ad, click 'Ad Details'.</p>\n          <p>Results are for the entire cluster of ads; to see other ad creatives in the cluster, click on the 'Alternate Creatives' tab. Ad type classifications and entities detected are for all ads in the cluster. If you see metadata that you believe to be in error, please let us know!</p>\n          <h2>Limitations</h2>\n          <p>Data is delayed approximately 48 hours. All metadata development and risk scores are EXPERIMENTAL.</p>\n        </Modal.Body>\n      </Modal>\n      <Modal\n        show={showNeedLoginModal}\n        onHide={handleCloseNeedLoginModal}\n        dialogClassName=\"modal-90w\"\n        size=\"lg\"\n      >\n        <Modal.Header>\n          <Modal.Title>Please Login To Use This Tool</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h2>Please login</h2>\n          <p>Either you have not logged in yet, or your session has expired.</p>\n          <a href=\"/login\">Click here to login or register</a>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { QueryParamProvider } from 'use-query-params';\n\nReactDOM.render(\n\t<Router>\n\t\t<QueryParamProvider ReactRouterRoute={Route}>\n\t\t\t<App />\n\t\t</QueryParamProvider>\n\t</Router>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}